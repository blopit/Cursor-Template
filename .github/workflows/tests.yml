name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for changed files detection
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create .env file
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
        echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" >> .env
        echo "DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }}" >> .env
        echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
        echo "AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }}" >> .env
        echo "AZURE_OPENAI_MODEL_DEPLOYMENT=${{ secrets.AZURE_OPENAI_MODEL_DEPLOYMENT }}" >> .env
        
    - name: Run tests (changed files only)
      if: github.event_name == 'pull_request'
      run: |
        # Get the base commit for comparison
        git fetch origin ${{ github.base_ref }}
        
        # Get changed Python files and their corresponding test files
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} HEAD)
        TEST_FILES=""
        
        # Build list of test files to run
        for file in $CHANGED_FILES; do
          if [[ $file == *.py ]]; then
            # If it's a test file, add it directly
            if [[ $file == test_*.py ]]; then
              TEST_FILES="$TEST_FILES $file"
            else
              # For non-test files, check if corresponding test file exists
              TEST_FILE="tests/$(dirname $file)/test_$(basename $file)"
              if [ -f "$TEST_FILE" ]; then
                TEST_FILES="$TEST_FILES $TEST_FILE"
              fi
            fi
          fi
        done
        
        if [ -n "$TEST_FILES" ]; then
          echo "Running tests for changed files:"
          echo "$TEST_FILES"
          python -m pytest $TEST_FILES -v
        else
          echo "No relevant Python files changed"
        fi

    - name: Run all tests
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        python -m pytest tests/ -v
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          .pytest_cache
          pytest-report.xml
        retention-days: 30
        compression-level: 6
      env:
        ACTIONS_STEP_DEBUG: true 